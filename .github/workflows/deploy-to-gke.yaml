name: Deploy to Google Kubernetes Engine

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: todo-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: todo-app
  IMAGE: todo-frontend-app

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential helper
    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE Credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
          
    # Push the Docker image to Google Container Registry
    - name: Push
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        
    # Update the image tag in deployment.yaml
    - name: Update deployment image
      run: |-
        sed -i "s|todo-frontend-app:latest|gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA|g" k8s/deployment.yaml
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        
    # Get service information
    - name: Get Service URL
      run: |-
        echo "Waiting for LoadBalancer external IP..."
        sleep 30
        kubectl get services todo-app -o wide
        echo "Your Todo app should be accessible via the LoadBalancer external IP on port 80" 